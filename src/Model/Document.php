<?php
/**
 * Document
 *
 * PHP version 5
 *
 * @category Class
 * @package  Pica9\CampaignDrive\ApiClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Pica9\CampaignDrive\ApiClient\Model;

use \ArrayAccess;
/**
 * Document Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Pica9\CampaignDrive\ApiClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Document implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'kind' => 'string',
        'document_id' => 'int',
        'name' => 'string',
        'status' => 'string',
        'brand' => '\Pica9\CampaignDrive\ApiClient\Model\Brand',
        'template' => '\Pica9\CampaignDrive\ApiClient\Model\Template',
        'created_by' => '\Pica9\CampaignDrive\ApiClient\Model\User',
        'approved_by' => '\Pica9\CampaignDrive\ApiClient\Model\User',
        'download_url' => '\Pica9\CampaignDrive\ApiClient\Model\Url',
        'created_at' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'kind' => 'kind',
        'document_id' => 'document_id',
        'name' => 'name',
        'status' => 'status',
        'brand' => 'brand',
        'template' => 'template',
        'created_by' => 'created_by',
        'approved_by' => 'approved_by',
        'download_url' => 'download_url',
        'created_at' => 'created_at'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'kind' => 'setKind',
        'document_id' => 'setDocumentId',
        'name' => 'setName',
        'status' => 'setStatus',
        'brand' => 'setBrand',
        'template' => 'setTemplate',
        'created_by' => 'setCreatedBy',
        'approved_by' => 'setApprovedBy',
        'download_url' => 'setDownloadUrl',
        'created_at' => 'setCreatedAt'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'kind' => 'getKind',
        'document_id' => 'getDocumentId',
        'name' => 'getName',
        'status' => 'getStatus',
        'brand' => 'getBrand',
        'template' => 'getTemplate',
        'created_by' => 'getCreatedBy',
        'approved_by' => 'getApprovedBy',
        'download_url' => 'getDownloadUrl',
        'created_at' => 'getCreatedAt'
    );
  
    
    /**
      * $kind Will always be equals to 'document'
      * @var string
      */
    protected $kind;
    
    /**
      * $document_id Unique ID of document
      * @var int
      */
    protected $document_id;
    
    /**
      * $name Name of document
      * @var string
      */
    protected $name;
    
    /**
      * $status Document status
      * @var string
      */
    protected $status;
    
    /**
      * $brand 
      * @var \Pica9\CampaignDrive\ApiClient\Model\Brand
      */
    protected $brand;
    
    /**
      * $template 
      * @var \Pica9\CampaignDrive\ApiClient\Model\Template
      */
    protected $template;
    
    /**
      * $created_by 
      * @var \Pica9\CampaignDrive\ApiClient\Model\User
      */
    protected $created_by;
    
    /**
      * $approved_by 
      * @var \Pica9\CampaignDrive\ApiClient\Model\User
      */
    protected $approved_by;
    
    /**
      * $download_url 
      * @var \Pica9\CampaignDrive\ApiClient\Model\Url
      */
    protected $download_url;
    
    /**
      * $created_at Date/time that document was created
      * @var string
      */
    protected $created_at;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->kind = $data["kind"];
            $this->document_id = $data["document_id"];
            $this->name = $data["name"];
            $this->status = $data["status"];
            $this->brand = $data["brand"];
            $this->template = $data["template"];
            $this->created_by = $data["created_by"];
            $this->approved_by = $data["approved_by"];
            $this->download_url = $data["download_url"];
            $this->created_at = $data["created_at"];
        }
    }
    
    /**
     * Gets kind
     * @return string
     */
    public function getKind()
    {
        return $this->kind;
    }
  
    /**
     * Sets kind
     * @param string $kind Will always be equals to 'document'
     * @return $this
     */
    public function setKind($kind)
    {
        
        $this->kind = $kind;
        return $this;
    }
    
    /**
     * Gets document_id
     * @return int
     */
    public function getDocumentId()
    {
        return $this->document_id;
    }
  
    /**
     * Sets document_id
     * @param int $document_id Unique ID of document
     * @return $this
     */
    public function setDocumentId($document_id)
    {
        
        $this->document_id = $document_id;
        return $this;
    }
    
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name Name of document
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status Document status
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets brand
     * @return \Pica9\CampaignDrive\ApiClient\Model\Brand
     */
    public function getBrand()
    {
        return $this->brand;
    }
  
    /**
     * Sets brand
     * @param \Pica9\CampaignDrive\ApiClient\Model\Brand $brand 
     * @return $this
     */
    public function setBrand($brand)
    {
        
        $this->brand = $brand;
        return $this;
    }
    
    /**
     * Gets template
     * @return \Pica9\CampaignDrive\ApiClient\Model\Template
     */
    public function getTemplate()
    {
        return $this->template;
    }
  
    /**
     * Sets template
     * @param \Pica9\CampaignDrive\ApiClient\Model\Template $template 
     * @return $this
     */
    public function setTemplate($template)
    {
        
        $this->template = $template;
        return $this;
    }
    
    /**
     * Gets created_by
     * @return \Pica9\CampaignDrive\ApiClient\Model\User
     */
    public function getCreatedBy()
    {
        return $this->created_by;
    }
  
    /**
     * Sets created_by
     * @param \Pica9\CampaignDrive\ApiClient\Model\User $created_by 
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        
        $this->created_by = $created_by;
        return $this;
    }
    
    /**
     * Gets approved_by
     * @return \Pica9\CampaignDrive\ApiClient\Model\User
     */
    public function getApprovedBy()
    {
        return $this->approved_by;
    }
  
    /**
     * Sets approved_by
     * @param \Pica9\CampaignDrive\ApiClient\Model\User $approved_by 
     * @return $this
     */
    public function setApprovedBy($approved_by)
    {
        
        $this->approved_by = $approved_by;
        return $this;
    }
    
    /**
     * Gets download_url
     * @return \Pica9\CampaignDrive\ApiClient\Model\Url
     */
    public function getDownloadUrl()
    {
        return $this->download_url;
    }
  
    /**
     * Sets download_url
     * @param \Pica9\CampaignDrive\ApiClient\Model\Url $download_url 
     * @return $this
     */
    public function setDownloadUrl($download_url)
    {
        
        $this->download_url = $download_url;
        return $this;
    }
    
    /**
     * Gets created_at
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }
  
    /**
     * Sets created_at
     * @param string $created_at Date/time that document was created
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        
        $this->created_at = $created_at;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
